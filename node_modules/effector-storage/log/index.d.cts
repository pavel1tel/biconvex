interface StorageAdapter {
    <State>(key: string, update: (raw?: any) => void): {
        get(raw?: any, ctx?: any): State | Promise<State | undefined> | undefined;
        set(value: State, ctx?: any): void;
    };
    keyArea?: any;
    noop?: boolean;
}

interface LogConfig {
    keyArea?: any;
    logger?: (msg: string) => void;
}
declare function log({ keyArea, logger, }?: LogConfig): StorageAdapter;
declare namespace log {
    var factory: true;
}

export { type LogConfig, log };
