/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.21.0
 * @flow
 */

declare interface StorageAdapter {
  <State>(
    key: string,
    update: (raw?: any) => void
  ): {
    get(raw?: any, ctx?: any): State | Promise<State | void> | void,
    set(value: State, ctx?: any): void,
    ...
  };
  keyArea?: any;
  noop?: boolean;
}
declare interface AsyncStorage {
  getItem: (key: string) => Promise<string | null>;
  setItem: (key: string, value: string) => Promise<void>;
}
declare interface AsyncStorageConfig {
  storage: () => AsyncStorage;
  serialize?: (value: any) => string;
  deserialize?: (value: string) => any;
}
declare var asyncStorage: typeof npm$namespace$asyncStorage;

declare var npm$namespace$asyncStorage: {|
  (x: AsyncStorageConfig): StorageAdapter,
  factory: typeof asyncStorage$factory,
|};
declare var asyncStorage$factory: true;
export type { AsyncStorage, AsyncStorageConfig };
declare export { asyncStorage };
