{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import type { ConfigPersist, Persist } from './types'\nimport { persist as base } from './core'\n\nexport type {\n  ConfigPersist,\n  ConfigSourceTarget,\n  ConfigStore,\n  Contract,\n  Done,\n  Fail,\n  Finally,\n  Persist,\n  StorageAdapter,\n  StorageAdapterFactory,\n} from './types'\n\n//\n// reexport adapters\n//\n\nexport type { AsyncStorageConfig } from './async-storage'\nexport type { BroadcastConfig } from './broadcast'\nexport type { LocalStorageConfig } from './local'\nexport type { LogConfig } from './log'\nexport type { MemoryConfig } from './memory'\nexport type { NilConfig } from './nil'\nexport type { QueryConfig } from './query'\nexport type { SessionStorageConfig } from './session'\nexport type { StorageConfig } from './storage'\n\nexport { asyncStorage } from './async-storage'\nexport { broadcast } from './broadcast'\nexport { local } from './local'\nexport { log } from './log'\nexport { memory } from './memory'\nexport { nil } from './nil'\nexport { query } from './query'\nexport { session } from './session'\nexport { storage } from './storage'\n\n//\n// reexport tools\n//\n\nexport { async, either, farcached } from './tools'\n\n/**\n * Creates custom `persist`\n */\nexport function createPersist(defaults?: ConfigPersist): Persist {\n  return (config: any) =>\n    base({\n      ...defaults,\n      ...config,\n    })\n}\n\n/**\n * Default `persist`\n */\nexport const persist: Persist = base\n"],"names":["persist","base","defaults","config"],"mappings":"kXA4DaA,EAAmBC,EAAAA,wUAXzB,SAAuBC,GAC5B,OAAQC,GACNF,EAAAA,QAAK,IACAC,KACAC,GAET"}