{"version":3,"file":"index.cjs","sources":["../../src/storage/index.ts"],"sourcesContent":["import type { StorageAdapter } from '../types'\n\nexport interface StorageConfig {\n  storage: () => Storage\n  sync?: boolean | 'force'\n  serialize?: (value: any) => string\n  deserialize?: (value: string) => any\n  timeout?: number\n  def?: any\n}\n\n/**\n * Creates generic `Storage` adapter\n */\nstorage.factory = true as const\nexport function storage({\n  storage,\n  sync = false,\n  serialize = JSON.stringify,\n  deserialize = JSON.parse,\n  timeout,\n  def,\n}: StorageConfig): StorageAdapter {\n  const adapter: StorageAdapter = <State>(\n    key: string,\n    update: (raw?: any) => void\n  ) => {\n    let scheduled: ReturnType<typeof setTimeout> | undefined\n    let unsaved: State\n    let to: Storage\n\n    // flush unsaved changes to Storage\n    const flush = () => to.setItem(key, serialize(unsaved))\n\n    // postponed flush unsaved changes to Storage\n    const postponed = (e?: BeforeUnloadEvent | 1) => {\n      scheduled = clearTimeout(scheduled) as undefined\n      if (e) flush()\n\n      // according to documentation, it is recommended to remove 'beforeunload' listener\n      // as soon as possible to minimize the effect on performance\n      // https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n      if (typeof removeEventListener !== 'undefined') {\n        removeEventListener('beforeunload', postponed)\n      }\n    }\n\n    // schedule postponed flush unsaved changes to Storage\n    const schedule = () => {\n      scheduled = setTimeout(postponed, timeout, 1)\n\n      // according to documentation, it is recommended to add 'beforeunload' listener\n      // ONLY when it is necessary, when there are actually unsaved changes\n      // https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n      if (typeof addEventListener !== 'undefined') {\n        addEventListener('beforeunload', postponed)\n      }\n    }\n\n    if (sync && typeof addEventListener !== 'undefined') {\n      addEventListener('storage', (e) => {\n        // I hope storage is accessible in case 'storage' event is happening\n        // so calling `storage()` should not throw security exception here\n        if (e.storageArea === storage()) {\n          // call `get` function with new value or undefined in case of force update\n          if (e.key === key) update(sync === 'force' ? undefined : e.newValue)\n\n          // `key` attribute is `null` when the change is caused by the storage `clear()` method\n          if (e.key === null) update(null)\n        }\n      })\n    }\n\n    return {\n      get(raw?: string | null) {\n        postponed() // cancel postponed flush\n        const item = raw !== undefined ? raw : storage().getItem(key)\n        return item === null\n          ? def !== undefined\n            ? def\n            : raw // 'undefined' when pickup, 'null' when clear\n          : deserialize(item)\n      },\n\n      set(value: State) {\n        unsaved = value\n        to = storage()\n        if (timeout === undefined) {\n          flush()\n        } else if (!scheduled) {\n          schedule()\n        }\n      },\n    }\n  }\n\n  try {\n    adapter.keyArea = storage()\n  } catch (error) {\n    // do nothing\n  }\n\n  return adapter\n}\n"],"names":["storage","sync","serialize","JSON","stringify","deserialize","parse","timeout","def","adapter","key","update","scheduled","unsaved","to","flush","setItem","postponed","e","clearTimeout","removeEventListener","addEventListener","storageArea","undefined","newValue","get","raw","item","getItem","set","value","setTimeout","keyArea","error","factory"],"mappings":"aAeO,SAASA,GAAQA,QACtBA,EAAOC,KACPA,GAAO,EAAKC,UACZA,EAAYC,KAAKC,UAASC,YAC1BA,EAAcF,KAAKG,MAAKC,QACxBA,EAAOC,IACPA,IAEA,IAAMC,EAA0BA,CAC9BC,EACAC,KAEA,IAAIC,EACAC,EACAC,EAGEC,EAAQA,IAAMD,EAAGE,QAAQN,EAAKR,EAAUW,IAGxCI,EAAaC,IACjBN,EAAYO,aAAaP,GACrBM,GAAGH,IAK4B,oBAAxBK,qBACTA,oBAAoB,eAAgBH,EACtC,EA6BF,OAdIhB,GAAoC,oBAArBoB,kBACjBA,iBAAiB,WAAYH,IAGvBA,EAAEI,cAAgBtB,MAEhBkB,EAAER,MAAQA,GAAKC,EAAgB,UAATV,OAAmBsB,EAAYL,EAAEM,UAG7C,OAAVN,EAAER,KAAcC,EAAO,MAC7B,IAIG,CACLc,GAAAA,CAAIC,GACFT,IACA,IAAMU,OAAeJ,IAARG,EAAoBA,EAAM1B,IAAU4B,QAAQlB,GACzD,OAAgB,OAATiB,OACKJ,IAARf,EACEA,EACAkB,EACFrB,EAAYsB,EACjB,EAEDE,GAAAA,CAAIC,GACFjB,EAAUiB,EACVhB,EAAKd,SACWuB,IAAZhB,EACFQ,IACUH,IAxCdA,EAAYmB,WAAWd,EAAWV,EAAS,GAKX,oBAArBc,kBACTA,iBAAiB,eAAgBJ,GAqCnC,EACD,EAGH,IACER,EAAQuB,QAAUhC,GACnB,CAAC,MAAOiC,GACP,CAGF,OAAOxB,CACT,CAzFAT,EAAQkC,SAAU"}