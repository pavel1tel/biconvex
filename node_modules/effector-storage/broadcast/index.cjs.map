{"version":3,"file":"index.cjs","sources":["../../src/broadcast/adapter.ts","../../src/broadcast/index.ts"],"sourcesContent":["import type { StorageAdapter } from '../types'\n\nexport interface BroadcastConfig {\n  channel?: string\n}\n\n/**\n * BroadcastChannel instances cache\n */\nconst channels = new Map<string, BroadcastChannel>()\n\n/**\n * BroadcastChannel adapter factory\n */\nexport function adapter({\n  channel = 'effector-storage',\n}: BroadcastConfig): StorageAdapter {\n  let created: BroadcastChannel | undefined\n  const bus = channels.get(channel) ?? (created = new BroadcastChannel(channel))\n  if (created) channels.set(channel, created)\n\n  const adapter: StorageAdapter = <State>(\n    key: string,\n    update: (raw?: any) => void\n  ) => {\n    bus.addEventListener('message', ({ data }) => {\n      // according to e2e tests, chromium can call `message`\n      // instead of `messageerror`, with `null` as message's data\n      if (data == null) {\n        update(() => {\n          throw new Error('Unable to deserialize message')\n        })\n      } else if (data.key === key) {\n        update(() => {\n          return data.value\n        })\n      }\n    })\n\n    // I know only one case when this event can be fired:\n    // if message was sent from page to shared worker, and it contains `SharedArrayBuffer`\n    // https://bugs.webkit.org/show_bug.cgi?id=171216\n    bus.addEventListener('messageerror', () => {\n      update(() => {\n        throw new Error('Unable to deserialize message')\n      })\n    })\n\n    return {\n      get(box?: () => State | undefined) {\n        if (box) return box()\n      },\n\n      set(value: State) {\n        bus.postMessage({ key, value })\n      },\n    }\n  }\n\n  adapter.keyArea = bus\n  return adapter\n}\n","import type { Subscription } from 'effector'\nimport type {\n  ConfigPersist as BaseConfigPersist,\n  ConfigStore as BaseConfigStore,\n  ConfigSourceTarget as BaseConfigSourceTarget,\n  StorageAdapter,\n} from '../types'\nimport type { BroadcastConfig } from './adapter'\nimport { persist as base } from '../core'\nimport { nil } from '../nil'\nimport { adapter } from './adapter'\n\nexport type {\n  Contract,\n  Done,\n  Fail,\n  Finally,\n  StorageAdapter,\n  StorageAdapterFactory,\n} from '../types'\nexport type { BroadcastConfig } from './adapter'\n\nexport interface ConfigPersist extends BaseConfigPersist {}\n\nexport interface ConfigStore<State, Err = Error>\n  extends BroadcastConfig,\n    BaseConfigStore<State, Err> {}\n\nexport interface ConfigSourceTarget<State, Err = Error>\n  extends BroadcastConfig,\n    BaseConfigSourceTarget<State, Err> {}\n\nexport interface Persist {\n  <State, Err = Error>(config: ConfigSourceTarget<State, Err>): Subscription\n  <State, Err = Error>(config: ConfigStore<State, Err>): Subscription\n}\n\n/**\n * Function, checking if `BroadcastChannel` exists and accessible\n */\nfunction supports() {\n  return typeof BroadcastChannel !== 'undefined'\n}\n\n/**\n * Creates BroadcastChannel string adapter\n */\nbroadcast.factory = true as const\nexport function broadcast(config?: BroadcastConfig): StorageAdapter {\n  return supports()\n    ? adapter({\n        ...config,\n      })\n    : nil({ keyArea: 'broadcast' })\n}\n\n/**\n * Creates custom partially applied `persist`\n * with predefined BroadcastChannel adapter\n */\nexport function createPersist(defaults?: ConfigPersist): Persist {\n  return (config) =>\n    base({\n      adapter: broadcast,\n      ...defaults,\n      ...config,\n    })\n}\n\n/**\n * Default partially applied `persist`\n */\nexport const persist = createPersist()\n"],"names":["channels","Map","broadcast","config","BroadcastChannel","channel","created","bus","get","set","adapter","key","update","addEventListener","data","Error","value","box","postMessage","keyArea","nil","createPersist","defaults","base","factory","persist"],"mappings":"8EASMA,EAAW,IAAIC,ICuCd,SAASC,EAAUC,GACxB,MARmC,oBAArBC,iBD3BT,UAAiBC,QACtBA,EAAU,qBAEV,IAAIC,EACEC,EAAMP,EAASQ,IAAIH,KAAaC,EAAU,IAAIF,iBAAiBC,IACjEC,GAASN,EAASS,IAAIJ,EAASC,GAEnC,IAAMI,EAA0BA,CAC9BC,EACAC,KAEAL,EAAIM,iBAAiB,WAAW,EAAGC,WAGrB,MAARA,EACFF,GAAO,KACL,MAAM,IAAIG,MAAM,gCAAgC,IAEzCD,EAAKH,MAAQA,GACtBC,GAAO,IACEE,EAAKE,OAEhB,IAMFT,EAAIM,iBAAiB,gBAAgB,KACnCD,GAAO,KACL,MAAM,IAAIG,MAAM,gCAAgC,GAChD,IAGG,CACLP,GAAAA,CAAIS,GACF,GAAIA,EAAK,OAAOA,GACjB,EAEDR,GAAAA,CAAIO,GACFT,EAAIW,YAAY,CAAEP,MAAKK,SACzB,IAKJ,OADAN,EAAQS,QAAUZ,EACXG,CACT,CCXMA,CAAQ,IACHP,IAELiB,EAAAA,IAAI,CAAED,QAAS,aACrB,CAMO,SAASE,EAAcC,GAC5B,OAAQnB,GACNoB,EAAAA,QAAK,CACHb,QAASR,KACNoB,KACAnB,GAET,CApBAD,EAAUsB,SAAU,EAyBPC,IAAAA,EAAUJ"}