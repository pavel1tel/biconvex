{"version":3,"file":"index.js","sources":["../../src/memory/adapter.ts","../../src/memory/index.ts"],"sourcesContent":["import type { StorageAdapter } from '../types'\n\nconst data = new Map<string, any>()\n\nexport interface MemoryConfig {\n  area?: Map<string, any>\n}\n\n/**\n * Memory adapter\n */\nadapter.factory = true as const\nexport function adapter({ area = data }: MemoryConfig = {}): StorageAdapter {\n  const adapter: StorageAdapter = <State>(key: string) => ({\n    get: () => area.get(key),\n    set: (value: State) => area.set(key, value),\n  })\n\n  adapter.keyArea = area\n  return adapter\n}\n","import type { Subscription } from 'effector'\nimport type {\n  ConfigPersist as BaseConfigPersist,\n  ConfigStore as BaseConfigStore,\n  ConfigSourceTarget as BaseConfigSourceTarget,\n} from '../types'\nimport { persist as base } from '../core'\nimport { adapter } from './adapter'\n\nexport type {\n  Contract,\n  Done,\n  Fail,\n  Finally,\n  StorageAdapter,\n  StorageAdapterFactory,\n} from '../types'\nexport type { MemoryConfig } from './adapter'\n\nexport interface ConfigPersist extends BaseConfigPersist {}\n\nexport interface ConfigStore<State, Err = Error>\n  extends BaseConfigStore<State, Err> {}\n\nexport interface ConfigSourceTarget<State, Err = Error>\n  extends BaseConfigSourceTarget<State, Err> {}\n\nexport interface Persist {\n  <State, Err = Error>(config: ConfigSourceTarget<State, Err>): Subscription\n  <State, Err = Error>(config: ConfigStore<State, Err>): Subscription\n}\n\n/**\n * Returns memory adapter\n */\nexport { adapter as memory }\n\n/**\n * Creates custom partially applied `persist`\n * with predefined `memory` adapter\n */\nexport function createPersist(defaults?: ConfigPersist): Persist {\n  return (config) =>\n    base({\n      adapter: adapter(),\n      ...defaults,\n      ...config,\n    })\n}\n\n/**\n * Default partially applied `persist`\n */\nexport const persist = createPersist()\n"],"names":["data","Map","adapter","area","key","get","set","value","keyArea","createPersist","defaults","config","base","factory","persist"],"mappings":"2CAEA,IAAMA,EAAO,IAAIC,IAUV,SAASC,GAAQC,KAAEA,EAAOH,GAAuB,IACtD,IAAME,EAAkCE,IAAiB,CACvDC,IAAKA,IAAMF,EAAKE,IAAID,GACpBE,IAAMC,GAAiBJ,EAAKG,IAAIF,EAAKG,KAIvC,OADAL,EAAQM,QAAUL,EACXD,CACT,CCqBO,SAASO,EAAcC,GAC5B,OAAQC,GACNC,EAAK,CACHV,QAASA,OACNQ,KACAC,GAET,CDrCAT,EAAQW,SAAU,EC0CLC,IAAAA,EAAUL"}