import { Event, EventCallable, Store } from 'effector';
export declare function interval<S extends unknown, F extends unknown>(config: {
    timeout: number | Store<number>;
    start: Event<S>;
    stop?: Event<F>;
    leading?: boolean;
    trailing?: boolean;
}): {
    tick: Event<void>;
    isRunning: Store<boolean>;
};
export declare function interval(config: {
    timeout: number | Store<number>;
    leading?: boolean;
    trailing?: boolean;
}): TriggerProtocol;
/**
 * @see {@link https://withease.pages.dev/protocols/trigger.html}
 */
export type TriggerProtocol = {
    '@@trigger': () => {
        setup: EventCallable<void>;
        teardown: EventCallable<void>;
        fired: Event<unknown> | Event<void>;
    };
};
