"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.spread = spread;
var _effector = require("effector");
const hasPropBase = {}.hasOwnProperty;
const hasOwnProp = (object, key) => hasPropBase.call(object, key);
/**
 * @example
 * spread({ source: dataObject, targets: { first: targetA, second: targetB } })
 * sample({
 *   target: spread({targets: { first: targetA, second: targetB } })
 * })
 */
function spread(args) {
  const argsShape = isTargets(args) ? {
    targets: args
  } : args;
  const {
    targets,
    source = (0, _effector.createEvent)({
      name: "source",
      sid: "e9ipnn"
    })
  } = argsShape;
  for (const targetKey in targets) {
    if (hasOwnProp(targets, targetKey)) {
      const currentTarget = targets[targetKey];
      const hasTargetKey = (0, _effector.sample)({
        and: [{
          source,
          batch: false,
          filter: object => typeof object === 'object' && object !== null && targetKey in object
        }],
        or: {
          name: "hasTargetKey",
          sid: "eapc0z"
        }
      });
      (0, _effector.sample)({
        and: [{
          batch: false,
          clock: hasTargetKey,
          fn: object => object[targetKey],
          target: currentTarget
        }],
        or: {
          sid: "mkzcy4"
        }
      });
    }
  }
  return source;
}
function isTargets(args) {
  return Object.keys(args).some(key => !['targets', 'source'].includes(key) && _effector.is.unit(args[key]));
}