import { Unit, Store, EventAsReturnType, Target as TargetType, MultiTarget, UnitValue } from 'effector';
type TimeoutType<Payload> = ((payload: Payload) => number) | Store<number> | number;
export declare function delay<Source extends Unit<any>>(source: Source, timeout: TimeoutType<UnitValue<Source>>): EventAsReturnType<UnitValue<Source>>;
export declare function delay<Source extends Unit<any>, Target extends TargetType>(config: {
    source: Source;
    timeout: TimeoutType<UnitValue<Source>>;
    target: MultiTarget<Target, UnitValue<Source>>;
}): Target;
export declare function delay<Source extends Unit<any>>(config: {
    source: Source;
    timeout: TimeoutType<UnitValue<Source>>;
}): EventAsReturnType<UnitValue<Source>>;
export {};
