{"version":3,"file":"atomic-router.js","sources":["../../node_modules/.pnpm/clsx@1.2.1/node_modules/clsx/dist/clsx.m.js","../../src/router-provider.tsx","../../src/link.tsx","../../src/use-is-opened.tsx","../../src/route.tsx","../../src/create-route-view.tsx","../../src/create-routes-view.tsx","../../src/use-link.ts"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { createHistoryRouter } from \"atomic-router\";\nimport React, { createContext, ReactNode, useContext } from \"react\";\n\ntype Router = ReturnType<typeof createHistoryRouter>;\n\nexport const RouterContext = createContext<Router | null>(null);\n\nexport function RouterProvider({ router, children }: { router: Router; children: ReactNode }) {\n  return <RouterContext.Provider value={router}>{children}</RouterContext.Provider>;\n}\n\nexport function useRouter() {\n  return useContext(RouterContext) as Router;\n}\n","import clsx from \"clsx\";\nimport { useUnit } from \"effector-react\";\nimport { buildPath, RouteParams, RouteQuery, RouteInstance } from \"atomic-router\";\nimport React, { AnchorHTMLAttributes, ForwardedRef, forwardRef } from \"react\";\n\nimport { useRouter } from \"./router-provider\";\n\nexport type LinkProps<Params extends RouteParams> = {\n  to: RouteInstance<Params> | string;\n  params?: Params;\n  query?: RouteQuery;\n  className?: string;\n  activeClassName?: string;\n  inactiveClassName?: string;\n} & AnchorHTMLAttributes<HTMLAnchorElement>;\n\nconst LinkView = <Params extends RouteParams>(\n  props: LinkProps<Params>,\n  ref: ForwardedRef<HTMLAnchorElement>\n) => {\n  const { to, params, query, activeClassName, inactiveClassName, ...linkProps } = props;\n  if (typeof props.to === \"string\") {\n    return (\n      <NormalLink ref={ref} href={props.to} {...linkProps} className={clsx(props.className)} />\n    );\n  }\n  // @ts-expect-error\n  return <RouteLink ref={ref} {...props} />;\n};\n\nconst NormalLink = forwardRef<HTMLAnchorElement, AnchorHTMLAttributes<HTMLAnchorElement>>(\n  (props, ref) => {\n    return <a ref={ref} className={props.className} {...props} />;\n  }\n);\n\nconst RouteLinkView = <Params extends RouteParams>(\n  props: Exclude<LinkProps<Params>, \"to\"> & { to: RouteInstance<Params> },\n  ref: ForwardedRef<HTMLAnchorElement>\n) => {\n  const {\n    to,\n    params,\n    query,\n    className,\n    activeClassName,\n    inactiveClassName,\n    onClick,\n    children,\n    target,\n    ...linkProps\n  } = props;\n\n  const router = useRouter();\n  const routeObj = router.routes.find((routeObj) => routeObj.route === to);\n\n  if (!routeObj) {\n    throw new Error(\"[RouteLink] Route not found\");\n  }\n\n  const [isOpened, navigate] = useUnit([routeObj.route.$isOpened, to.navigate]);\n\n  const href = buildPath({\n    pathCreator: routeObj.path,\n    params: params || {},\n    query: query || {},\n  });\n\n  return (\n    <a\n      ref={ref}\n      href={href}\n      {...linkProps}\n      className={clsx(className, isOpened ? activeClassName : inactiveClassName)}\n      target={target}\n      onClick={(evt) => {\n        if (onClick) {\n          onClick(evt);\n        }\n\n        // allow user to prevent navigation\n        if (evt.defaultPrevented) {\n          return;\n        }\n\n        // let browser handle \"_blank\" target and etc\n        if (target && target !== \"_self\") {\n          return;\n        }\n\n        // skip modified events (like cmd + click to open the link in new tab)\n        if (evt.metaKey || evt.altKey || evt.ctrlKey || evt.shiftKey) {\n          return;\n        }\n\n        evt.preventDefault();\n        navigate({\n          params: params || ({} as Params),\n          query: query || {},\n        });\n      }}\n    >\n      {children}\n    </a>\n  );\n};\n\nconst RouteLink = forwardRef(RouteLinkView);\n\nexport const Link = forwardRef(LinkView) as <Params extends RouteParams>(\n  props: LinkProps<Params> & { ref?: ForwardedRef<HTMLAnchorElement> }\n) => ReturnType<typeof LinkView>;\n","import { useUnit } from \"effector-react\";\nimport { RouteInstance } from \"atomic-router\";\n\nexport function useIsOpened(route: RouteInstance<any> | RouteInstance<any>[]) {\n  return Array.isArray(route)\n    ? useUnit(route.map((route) => route.$isOpened)).some(Boolean)\n    : useUnit(route.$isOpened);\n}\n","import React from \"react\";\nimport { RouteInstance, RouteParams } from \"atomic-router\";\n\nimport { useIsOpened } from \"./use-is-opened\";\n\ninterface Props<Params extends RouteParams> {\n  route: RouteInstance<Params> | RouteInstance<Params>[];\n  view: React.ComponentType;\n}\n\nexport function Route<Params extends RouteParams>({ route, view: Component }: Props<Params>) {\n  const isOpened = useIsOpened(route);\n\n  if (isOpened) {\n    return <Component />;\n  }\n\n  return null;\n}\n","import React from \"react\";\nimport { RouteInstance, RouteParams } from \"atomic-router\";\n\nimport { useIsOpened } from \"./use-is-opened\";\n\nexport interface RouteViewConfig<Props, Params extends RouteParams> {\n  route: RouteInstance<Params> | RouteInstance<Params>[];\n  view: React.ComponentType<Props>;\n  otherwise?: React.ComponentType<Props>;\n}\n\nexport function createRouteView<\n  Props,\n  Params extends RouteParams,\n  Config extends {\n    [key in keyof RouteViewConfig<Props, Params>]?: RouteViewConfig<Props, Params>[key];\n  }\n>(config: Config) {\n  return (props: Props & Omit<RouteViewConfig<Props, Params>, keyof Config>) => {\n    const mergedConfig = { ...config, ...props } as RouteViewConfig<Props, Params>;\n    const isOpened = useIsOpened(mergedConfig.route);\n\n    if (isOpened) {\n      const View = mergedConfig.view;\n\n      return <View {...props} />;\n    }\n\n    if (mergedConfig.otherwise) {\n      const Otherwise = mergedConfig.otherwise;\n\n      return <Otherwise {...props} />;\n    }\n\n    return null;\n  };\n}\n","import React, { FC, ReactNode } from \"react\";\nimport { RouteInstance, RouteParams } from \"atomic-router\";\n\nimport { useIsOpened } from \"./use-is-opened\";\n\nexport interface RouteRecord<Props, Params extends RouteParams> {\n  route: RouteInstance<Params> | RouteInstance<Params>[];\n  view: React.ComponentType<Props>;\n  layout?: FC<{ children: ReactNode }>;\n}\n\nexport interface RoutesViewConfig {\n  routes: RouteRecord<any, any>[];\n  otherwise?: React.ComponentType<any>;\n}\n\nexport function createRoutesView<Config extends RoutesViewConfig>(config: Config) {\n  return (props: Omit<Config, keyof Config>) => {\n    const mergedConfig = { ...config, ...props };\n    const routes = mergedConfig.routes.map((routeRecord) => {\n      const isOpened = useIsOpened(routeRecord.route);\n      return { ...routeRecord, isOpened };\n    });\n\n    for (const route of routes) {\n      if (route.isOpened) {\n        const View = route.view;\n\n        if (route.layout) {\n          const Layout = route.layout;\n          return (\n            <Layout>\n              <View />\n            </Layout>\n          );\n        }\n\n        return <View />;\n      }\n    }\n\n    if (mergedConfig.otherwise) {\n      const Otherwise = mergedConfig.otherwise;\n\n      return <Otherwise />;\n    }\n\n    return null;\n  };\n}\n","import { buildPath, RouteInstance, RouteParams, RouteQuery } from \"atomic-router\";\n\nimport { useRouter } from \"./router-provider\";\n\nexport function useLink<Params extends RouteParams>(\n  route: RouteInstance<Params>,\n  params: Params,\n  query: RouteQuery = {}\n): string {\n  const router = useRouter();\n  const routeObj = router.routes.find((routeObj) => routeObj.route === route);\n\n  if (!routeObj) {\n    throw new Error(`[useLink] Route not found. Maybe it is not passed into createHistoryRouter`);\n  }\n\n  return buildPath({\n    pathCreator: routeObj.path,\n    params: params,\n    query: query,\n  });\n}\n"],"names":["RouterContext","createContext","RouterProvider","router","children","_jsx","useRouter","useContext","LinkView","props","ref","to","params","query","activeClassName","inactiveClassName","linkProps","_objectSpread","clsx","className","NormalLink","forwardRef","RouteLinkView","onClick","target","routeObj","routes","find","route","Error","useUnit","$isOpened","navigate","isOpened","href","_withFactory","buildPath","pathCreator","path","evt","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","preventDefault","RouteLink","Link","useIsOpened","Array","isArray","map","some","Boolean","Route","Component","view","createRouteView","config","mergedConfig","View","otherwise","Otherwise","createRoutesView","routeRecord","layout","Layout","useLink"],"mappings":"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"}